:root {
  --bgColor-card: #fff;
  --bgColor-inset: #eee;
  --borderColor-card: #aaa;
  --borderColor-focus: #000;
  --borderRadius-card: 0.333rem;
  --borderWidth-card: 0.125rem;
  --easeOutExpo: cubic-bezier(0.16, 1, 0.3, 1);
  --fgColor-card: #000;
  --fgColor-default: #000;
  --fgColor-subtle: #aaa;
  --height-card: calc(1.25rem * 3.5);
  --rotate-left: -5.625deg;
  --rotate-right: 5.625deg;
  --spacing-0: 0;
  --spacing-0_5: 0.125rem;
  --spacing-1: 0.25rem;
  --spacing-2: 0.5rem;
  --spacing-3: 0.75rem;
  --spacing-4: 1rem;
  --width-card: calc(1.25rem * 2.5);
}

@media (prefers-color-scheme: dark) {
  :root {
    --bgColor-default: #333;
    --bgColor-inset: #444;
    --fgColor-default: #fff;
    --fgColor-subtle: #666;
  }
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-family: monospace;
  font-size: 14px;
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
}

body {
  background-color: var(--bgColor-default);
  color: var(--fgColor-default);
}

button {
  background: none;
  border: none;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  padding: 0;
  text-decoration: underline;
  width: auto;
}

button:has(.card) {
  outline: none;
  text-decoration: none;
}

button:disabled > .card {
  color: var(--fgColor-card);
  opacity: 0.5;
}

@keyframes wiggle {
  0%,
  100% {
    transform: rotate(var(--rotate-left)) translateY(calc(var(--spacing-2) * -1));
  }
  50% {
    transform: rotate(var(--rotate-right)) translateY(calc(var(--spacing-2) * -1));
  }
}

button:focus > .card,
button:not(:disabled):hover > .card {
  animation: wiggle 2s ease-in-out infinite;
  z-index: 1;
}

button:focus > .card {
  border-color: var(--borderColor-focus);
  outline: var(--borderWidth-card) solid var(--borderColor-focus);
}

details.penalties-wrapper {
  margin-top: var(--spacing-4);
  white-space: pre;
}

details.penalties-wrapper > summary {
  list-style: none;
  width: fit-content;
}

details.penalties-wrapper > summary::before {
  content: '+ ';
}

details.penalties-wrapper[open] > summary::before {
  content: '- ';
}

ol {
  margin-top: var(--spacing-4);
  margin-left: var(--spacing-4);
}

ol > li {
  margin-left: var(--spacing-4);
}

p {
  margin-top: var(--spacing-4);
}

ul.penalties {
  list-style: none;
}

.app {
  overflow: hidden;
  padding: var(--spacing-4);
}

.card {
  align-items: center;
  background-color: var(--bgColor-card);
  border: var(--borderWidth-card) solid var(--borderColor-card);
  border-radius: var(--borderRadius-card);
  color: var(--fgColor-card);
  display: flex;
  gap: var(--spacing-1);
  height: var(--height-card);
  justify-content: center;
  user-select: none;
  width: var(--width-card);
}

.discard-pile {
  display: flex;
  margin-top: var(--spacing-4);
  min-height: var(--height-card);
}

.discard-pile > .card:nth-child(odd) {
  transform: rotate(var(--rotate-left));
}

.discard-pile > .card:nth-child(even) {
  transform: rotate(var(--rotate-right));
}

@keyframes animateOddCard {
  0% {
    transform: rotate(var(--rotate-right)) translateY(var(--spacing-4));
  }
  100% {
    transform: rotate(var(--rotate-left)) translateY(0);
  }
}

.discard-pile > .card.animate:nth-child(odd) {
  animation: animateOddCard 500ms var(--easeOutExpo);
}

@keyframes animateEvenCard {
  0% {
    transform: rotate(var(--rotate-left)) translateY(var(--spacing-4));
  }
  100% {
    transform: rotate(var(--rotate-right)) translateY(0);
  }
}

.discard-pile > .card.animate:nth-child(even) {
  animation: animateEvenCard 500ms var(--easeOutExpo);
}

.divider {
  color: var(--fgColor-subtle);
}

.hand {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-2);
  margin-top: var(--spacing-4);
  min-height: var(--height-card);
}

.scoreboard-wrapper {
  overflow-x: auto;
}

.scoreboard {
  border-collapse: collapse;
  table-layout: fixed;
}

.scoreboard th {
  font-weight: inherit;
}

.scoreboard .col-score {
  text-align: right;
}

.tricks {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-3);
  margin-top: var(--spacing-4);
}

.trick {
  display: flex;
  height: var(--height-card);
  position: relative;
  width: var(--width-card);
}

@keyframes animateTrick {
  0% {
    transform: translateY(var(--spacing-4));
  }
  100% {
    transform: translateY(0);
  }
}

.trick.animate {
  animation: animateTrick 500ms var(--easeOutExpo);
}

.trick > .card {
  flex-shrink: 0;
  left: 0;
  position: absolute;
  top: 0;
}

.trick > .card:nth-child(odd) {
  transform: rotate(var(--rotate-left));
}

.trick > .card:nth-child(even) {
  transform: rotate(var(--rotate-right));
}

.trick:is(:focus, :hover) > .card {
  margin-left: calc(var(--spacing-4) * -1);
  position: initial;
}

.trick:is(:focus, :hover) > .card:first-child {
  margin-left: 0;
}
